//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GeoLib.ClientCallback.GeoCallbackService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ZipCityData", Namespace="http://schemas.datacontract.org/2004/07/GeoLib.Callback")]
    [System.SerializableAttribute()]
    public partial class ZipCityData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ZipCode {
            get {
                return this.ZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipCodeField, value) != true)) {
                    this.ZipCodeField = value;
                    this.RaisePropertyChanged("ZipCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="GeoCallbackService.IGeoCallbackService", CallbackContract=typeof(GeoLib.ClientCallback.GeoCallbackService.IGeoCallbackServiceCallback))]
    public interface IGeoCallbackService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeoCallbackService/UpdateZipCity", ReplyAction="http://tempuri.org/IGeoCallbackService/UpdateZipCityResponse")]
        void UpdateZipCity(System.Collections.Generic.List<GeoLib.ClientCallback.GeoCallbackService.ZipCityData> data);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeoCallbackService/UpdateZipCity", ReplyAction="http://tempuri.org/IGeoCallbackService/UpdateZipCityResponse")]
        System.Threading.Tasks.Task UpdateZipCityAsync(System.Collections.Generic.List<GeoLib.ClientCallback.GeoCallbackService.ZipCityData> data);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGeoCallbackServiceCallback {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGeoCallbackService/ZipUpdated", ReplyAction="http://tempuri.org/IGeoCallbackService/ZipUpdatedResponse")]
        void ZipUpdated(GeoLib.ClientCallback.GeoCallbackService.ZipCityData data);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGeoCallbackServiceChannel : GeoLib.ClientCallback.GeoCallbackService.IGeoCallbackService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GeoCallbackServiceClient : System.ServiceModel.DuplexClientBase<GeoLib.ClientCallback.GeoCallbackService.IGeoCallbackService>, GeoLib.ClientCallback.GeoCallbackService.IGeoCallbackService {
        
        public GeoCallbackServiceClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public GeoCallbackServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public GeoCallbackServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GeoCallbackServiceClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public GeoCallbackServiceClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void UpdateZipCity(System.Collections.Generic.List<GeoLib.ClientCallback.GeoCallbackService.ZipCityData> data) {
            base.Channel.UpdateZipCity(data);
        }
        
        public System.Threading.Tasks.Task UpdateZipCityAsync(System.Collections.Generic.List<GeoLib.ClientCallback.GeoCallbackService.ZipCityData> data) {
            return base.Channel.UpdateZipCityAsync(data);
        }
    }
}
