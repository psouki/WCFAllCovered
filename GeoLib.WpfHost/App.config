<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
        <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    </configSections>
  <connectionStrings>
    <add name="main" connectionString="Data Source=(LocalDb)\v11.0;Initial Catalog=ZipCodeData;Integrated Security=True" providerName="System.Data.SqlClient" />
  </connectionStrings>
    <startup> 
        <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.5" />
    </startup>
  <system.serviceModel>
    <services>
      <service name="GeoLib.Services.GeoManager">
        <endpoint address="http://localhost:8086/GeoService"
                  binding="wsHttpBinding"
                  contract="GeoLib.Contracts.IGeoService"
                  name="WsEp"
                  bindingConfiguration="wsBindingConfig">
        </endpoint>
        <endpoint address="http://localhost/GeoService"
                  binding="basicHttpBinding"
                  contract="GeoLib.Contracts.IGeoService"
                  name="HttpEp">
        </endpoint>
      </service>
      <service name="GeoLib.WpfHost.MessagerManager">
        <endpoint address="net.pipe://localhost/MeesageService"
                 binding="netNamedPipeBinding"
                 contract="GeoLib.WpfHost.IMessageService">
        </endpoint>
      </service>
    </services>
    <!--Every binding configurations has to exists in the host and the client to work.
    It is a matter of transport negotiation, so the both parties have to reach an understanding -->
    <bindings>
      <basicHttpBinding>
        <binding maxReceivedMessageSize="2097152" />
      </basicHttpBinding>
      <wsHttpBinding>
        <!--As this binding configuration has a name only the endpoint targeting this name will obey it-->
        <binding name="wsBindingConfig" sendTimeout="00:10:00" receiveTimeout="00:10:00" />
      </wsHttpBinding>
    </bindings>
    <behaviors>
      <!--As they are service behaviors, they need to exist only in the service
      and the client should not know anything about it-->
      <serviceBehaviors>
        <behavior>
          <!--This is good for development time, this expose the exceptions details-->
          <serviceDebug includeExceptionDetailInFaults="true"/>
        </behavior>
      </serviceBehaviors>
    </behaviors>
  </system.serviceModel>
</configuration>